<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalization
key_left = noone;
key_right = noone;
key_accept = noone;
key_back = noone;

m_inputTimer = 0;

m_currentSelected = 0;

yPosTitle = (global.gameHeight / 2) - (global.gameHeight / 3.65);
yPosHead = (global.gameHeight / 2) + (global.gameHeight / 3.8);
yPosWeapon = (global.gameHeight / 2) + (global.gameHeight / 3.5);

m_headSprite[0] = noone;
m_weaponSprite[0] = noone;

characterAngle = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Assign sprites
m_headSprite[0] = spr_playerHead1;
m_headSprite[1] = spr_playerHead2;
m_headSprite[2] = spr_playerHead3;        
m_headSprite[3] = spr_playerHead4;        
m_headSprite[4] = spr_playerHead5;        
m_headSprite[5] = spr_playerHead6;        
m_headSprite[6] = spr_playerHead7;        
m_headSprite[7] = spr_playerHead8;        
m_headSprite[8] = spr_playerHead9;        
m_headSprite[9] = spr_playerHead10;

m_weaponSprite[0] = spr_playerGun1Base;
m_weaponSprite[1] = spr_playerGun2Base;
m_weaponSprite[2] = spr_playerGun3Base; 
m_weaponSprite[3] = spr_playerGun4Base;
m_weaponSprite[4] = spr_playerGun5Base;
m_weaponSprite[5] = spr_playerGun6Base;
m_weaponSprite[6] = spr_playerGun7Base;
m_weaponSprite[7] = spr_playerGun8Base; 
m_weaponSprite[8] = spr_playerGun9Base;
m_weaponSprite[9] = spr_playerGun10Base;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get input
key_accept = gamepad_button_check_pressed(0, gp_face1);
key_back = gamepad_button_check_pressed(0, gp_face2);

var hAxis = gamepad_axis_value(0, gp_axislh);

if (hAxis &gt; 0.4 &amp;&amp; m_inputTimer == 0)
{ key_right = true; m_inputTimer = 10; }
else { key_right = false; }

if (hAxis &lt; -0.4 &amp;&amp; m_inputTimer == 0)
{ key_left = true; m_inputTimer = 10; }
else { key_left = false; }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch bewteen modes

if (key_accept &amp;&amp; m_currentSelected &lt; 1)
{
    m_currentSelected++;
    audio_play_sound(snd_select, 1, 0);
}
else if (key_accept)
{
    room_goto_next();
}

if (key_back &amp;&amp; m_currentSelected &gt; 0)
{
    m_currentSelected--;
    audio_play_sound(snd_back, 1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Time timers

if (m_inputTimer &gt; 0)
{
    m_inputTimer--;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select stuff

switch (m_currentSelected)
{
    case 0: // Head mode
        if (key_left)
        {
            global.playerHead--;
            audio_play_sound(snd_choose, 1, 0);
        }
        if (key_right)
        {
            global.playerHead++;
            audio_play_sound(snd_choose, 1, 0);
        }
        break;
        
    case 1: // Weapon mode
        if (key_left)
        {
            global.playerWeapon--;
            audio_play_sound(snd_choose, 1, 0);
        }
        if (key_right)
        {
            global.playerWeapon++;
            audio_play_sound(snd_choose, 1, 0);
        }
        break;
}
 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Make sure that value's don't go out of bounds

if (global.playerHead &lt; 0)
{
    global.playerHead = head_max;
}
if (global.playerHead &gt; head_max)
{
    global.playerHead = 0;
}

if (global.playerWeapon &lt; 0)
{
    global.playerWeapon = weapon_max;
}
if (global.playerWeapon &gt; weapon_max)
{
    global.playerWeapon = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Things for the character

characterAngle -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_color(c_white);
draw_set_font(fnt_small);

switch (m_currentSelected)
{
    case 0: // Head
        draw_text_transformed(global.gameWidth/2, yPosHead, "[ pick your head ]", 1.2, 1.2, 0); 
        draw_text_transformed(global.gameWidth/2, yPosWeapon, "weapon", 0.8, 0.8, 0);
        break;
    
    case 1: // Weapon
        draw_text_transformed(global.gameWidth/2, yPosHead, "head", 0.8, 0.8, 0); 
        draw_text_transformed(global.gameWidth/2, yPosWeapon, "[ pick your weapon ]", 1.2, 1.2, 0);
        break;
}

draw_set_font(fnt_scoreUI);
draw_set_valign(fa_center);
draw_text(global.gameWidth/2, yPosTitle, "TwinStickHacker#Prototype")

draw_set_valign(fa_bottom);
draw_set_font(fnt_small);
draw_text(global.gameWidth/2, global.gameHeight - 32, "controller required, press esc to exit - use left stick to move, right stick to shoot
                                                        #heads dont have any effect on gameplay
                                                        #glitch shader by BlockAtt, font by NAL - broodroost3r 2018");

draw_sprite_ext(m_headSprite[global.playerHead], 0, global.gameWidth/2, global.gameHeight/2, 5, 5, characterAngle, image_blend, image_alpha);
draw_sprite_ext(m_weaponSprite[global.playerWeapon], 0, global.gameWidth/2, global.gameHeight/2, 5, 5, characterAngle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
