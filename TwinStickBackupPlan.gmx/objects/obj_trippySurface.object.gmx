<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initalize surfaces

m_surfRed = surface_create(GAME_WIDTH, GAME_HEIGHT);
m_surfBlue = surface_create(GAME_WIDTH, GAME_HEIGHT);
m_surfGreen = surface_create(GAME_WIDTH, GAME_HEIGHT);
m_surfNormal = surface_create(GAME_WIDTH, GAME_HEIGHT);

m_multiplier = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(m_surfRed);
draw_clear_alpha(c_black, 0);
with(par_trippy){
    x = x - view_xview[0]; y = y - view_yview[0];
    if(object_index == obj_player){
        m_oldPosX -= view_xview[0];
        m_oldPosY -= view_yview[0];
    }
    
    event_perform(ev_draw, 0);

     x = x + view_xview[0]; y = y + view_yview[0];
    if(object_index == obj_player){
        m_oldPosX += view_xview[0];
        m_oldPosY += view_yview[0];
    }
}
surface_reset_target();

m_surfBlue = m_surfRed;
m_surfGreen = m_surfBlue;
m_surfNormal = m_surfGreen;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m_multiplier = lerp(m_multiplier, 1, 0.1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(m_surfRed);
surface_free(m_surfBlue);
surface_free(m_surfGreen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(m_surfRed))
{
    draw_surface_ext(m_surfRed, view_xview[0] + 3 * m_multiplier, view_yview[0], 1, 1, 0, c_red, 0.3);
}

if (surface_exists(m_surfBlue))
{
    draw_surface_ext(m_surfBlue, view_xview[0] - 2 * m_multiplier, view_yview[0] - 3 * m_multiplier, 1, 1, 0, c_blue, 0.3);
}

if (surface_exists(m_surfGreen))
{
    draw_surface_ext(m_surfGreen, view_xview[0] - 1 * m_multiplier, view_yview[0] + 3 * m_multiplier, 1, 1, 0, c_lime, 0.3);
}
if (surface_exists(m_surfNormal))
{
    draw_surface(m_surfNormal, view_xview[0], view_yview[0]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
